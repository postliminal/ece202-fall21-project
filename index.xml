<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LOCALIZZACIONE</title>
    <link>//postliminal.github.io/ecem202a_project/</link>
    <description>Recent content on LOCALIZZACIONE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Dec 2021 03:02:21 -0800</lastBuildDate><atom:link href="//postliminal.github.io/ecem202a_project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Proposal</title>
      <link>//postliminal.github.io/ecem202a_project/posts/0proposal/</link>
      <pubDate>Mon, 01 Nov 2021 01:26:06 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/0proposal/</guid>
      <description>Project Proposal 1. Motivation &amp;amp; Objective Indoors localization has been a highly researched topic for decades. Since GPS signals can’t reach devices inside buildings, alternative methods using radio signals (Bluetooth, 802.15.4, wifi), audio signals, visual signals, etc. have been devised and published. Given that these sensing technologies (radio, audio, video, depth) continue to improve, the indoors localization problem is still relevant and continues to be actively researched. Therefore, we seek to contribute to the ongoing research by approaching the localization problem via the implementation and experimentation of some of these algorithms in a resource constrained computing environment (Arduino Nano Sense 33 BLE).</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>//postliminal.github.io/ecem202a_project/posts/1overview/</link>
      <pubDate>Thu, 02 Dec 2021 01:26:06 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/1overview/</guid>
      <description>Problem: With the rise and continuous update of various IoT communication standards it is hard to keep track of what is the most suitable option. Two standards, Bluetooth (BLE 5.0 standard) and Thread (implemented using OpenThread), are either massively adopted (BLE) or rapidly gaining popularity (thread). However, there has not been a recent analysis between these two protocols.
Project Goals: Make an updated analysis between these two protocols. By using various radio configurations for both protocols we can get a better understanding on their performance and limitations.</description>
    </item>
    
    <item>
      <title>Prior Work</title>
      <link>//postliminal.github.io/ecem202a_project/posts/3priorwork/</link>
      <pubDate>Wed, 01 Dec 2021 01:26:43 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/3priorwork/</guid>
      <description>Bluetooth - BLE 5.0 A wireless communication protocol that is (almost if not already) ubiquitous. Released in 2016, BLE 5.0 introduced a few changes that make bluetooth technology suitable for more applications. New features allow:
 larger bandwidth transmissions (higher throughput = higher data speeds) multi device connection (e.g. now you can send music to two pairs of headphones from one device) larger advertising packets allow better pairing + other applications (beacons!</description>
    </item>
    
    <item>
      <title>Design</title>
      <link>//postliminal.github.io/ecem202a_project/posts/4design/</link>
      <pubDate>Mon, 01 Nov 2021 01:26:43 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/4design/</guid>
      <description>[image 1] - should be showing 3 beacons, a central device, and maybe a PC? Plus X-Y coordinates and roughly spatial distance. DO NOT INCLUDE specific ble or openthread specs/terms/concepts.
Contents  Hardware Platforms Software Stack BLE Application OpenThread Application Location from RSSI Experiments  The Hardware Platform The SoC: Nordic nRF52840 [images of boards?]
 (2x) Arduino Nano Sense 33 BLE  Beacon 1 MAC:   (2x) nRF52840 Dongle  Beacon 2 MAC: Beacon 3 MAC:   (1x) nRF52840 Development Kit  Central device (polls beacons)    The Software Stack Embedded Software Development:  Segger Embedded Studio nRF5 SDK &amp;amp; nRF5 SDK for Thread and Zigbee nRF Connect+Programmer for flashing code CMSIS Libraries for Arm Cortex M microcontrollers  Utilities and Other tools:  Python + Matplotlib nRF BLE Sniffer nRF 802.</description>
    </item>
    
    <item>
      <title>Results</title>
      <link>//postliminal.github.io/ecem202a_project/posts/5results/</link>
      <pubDate>Mon, 01 Nov 2021 01:26:43 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/5results/</guid>
      <description>we only need to do a few sweeps and we get something solid
take photos!!!
1. Noisy measurements of RSSI in BLE and 802.15.4  python plots  if possible have multiple adv channels and compare aggregate/default/average   explanation could do some signal analysis (variance, etc?)  2. Localization results (BLE vs. Thread) Current narrative:
  thread is not meant for this application
 self healing/automated network changes structure give example of applications meant for thread    unable to disable exponential backoff when using otGetNeighborinfo without having to recompile the libraries manually</description>
    </item>
    
    <item>
      <title>References</title>
      <link>//postliminal.github.io/ecem202a_project/posts/6references/</link>
      <pubDate>Mon, 01 Nov 2021 01:26:43 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/6references/</guid>
      <description>  Polak, Ladislav et al. “Received Signal Strength Fingerprinting-Based Indoor Location Estimation Employing Machine Learning.” Sensors (Basel, Switzerland) vol. 21,13 4605. 5 Jul. 2021, doi:10.3390/s21134605
  https://developer.arm.com/documentation/102052/0000/Implement-your-SVM-with-CMSIS-DSP
  </description>
    </item>
    
    <item>
      <title>5_5futurework</title>
      <link>//postliminal.github.io/ecem202a_project/posts/5_5futurework/</link>
      <pubDate>Fri, 10 Dec 2021 03:02:21 -0800</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/posts/5_5futurework/</guid>
      <description>Everything that we weren&amp;rsquo;t able to do we can include it here nicely and explain what went wrong   branches we didn&amp;rsquo;t get to combine
 multitask wakework recog task    any future config changes
 the sweeps or other sweeps    any processing that could improve results
  include timeline? list of tasks? automation of parameters  could be directly applied to neural architecture search of future models that use peripherals?</description>
    </item>
    
    <item>
      <title>Contact Us</title>
      <link>//postliminal.github.io/ecem202a_project/contact/</link>
      <pubDate>Mon, 01 Nov 2021 01:26:06 -0700</pubDate>
      
      <guid>//postliminal.github.io/ecem202a_project/contact/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
